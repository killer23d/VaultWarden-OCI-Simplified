# VaultWarden-OCI-NG Environment Configuration
# This file serves as the single source of truth for all configuration variables
# Generated by setup.sh

# ==========================================================
#                  CORE CONFIGURATION
# ==========================================================

# Domain Configuration (REQUIRED)
# Your publicly accessible domain name (e.g., vault.example.com)
DOMAIN=vault.example.com
# Email address for admin notifications and Let's Encrypt registration
ADMIN_EMAIL=admin@example.com

# Project Configuration
# Internal Docker project name (used for container/network names)
COMPOSE_PROJECT_NAME=vaultwarden
# Directory on the host where persistent data is stored
PROJECT_STATE_DIR=/var/lib/vaultwarden

# ==========================================================
#                CONTAINER VERSIONS
# ==========================================================
# Specify exact versions for stability. Update here, then run ./update.sh
VAULTWARDEN_VERSION=1.30.5
CADDY_VERSION=2.8.4
FAIL2BAN_VERSION=1.1.0
DDCLIENT_VERSION=3.11.2

# ==========================================================
#                 SERVICE CONFIGURATION
# ==========================================================

# VaultWarden Settings
# Directory inside PROJECT_STATE_DIR for VaultWarden data
VAULTWARDEN_DATA_FOLDER=${PROJECT_STATE_DIR}/data
# Logging level (trace, debug, info, warn, error)
VAULTWARDEN_LOG_LEVEL=info

# Caddy Settings
# Directory inside PROJECT_STATE_DIR for Caddy data (certs, etc.)
CADDY_DATA_DIR=${PROJECT_STATE_DIR}/caddy
# Path to Caddyfile configuration within the project
CADDY_CONFIG_DIR=./caddy

# Fail2ban Settings
# Path to Fail2ban configuration within the project
FAIL2BAN_CONFIG_DIR=./fail2ban
# Logging level (CRITICAL, ERROR, WARNING, NOTICE, INFO, DEBUG)
FAIL2BAN_LOG_LEVEL=INFO

# ==========================================================
#                BACKUP CONFIGURATION
# ==========================================================

# How many days to keep local backups before cleanup
BACKUP_RETENTION_DAYS=30
# Encryption method (currently only 'age' is supported)
BACKUP_ENCRYPTION=age
# Rclone Remote Name (REQUIRED for offsite backups)
# The name of the remote you configured using 'rclone config'
# Example: MyGDrive, B2Backup, OCI-ObjectStorage
RCLONE_REMOTE_NAME=MyCloudStorage

# ==========================================================
#               NETWORK CONFIGURATION
# ==========================================================

# Name for the internal Docker network
DOCKER_NETWORK_NAME=vaultwarden_network

# ==========================================================
#           CLOUDFLARE & DYNAMIC DNS (REQUIRED)
# ==========================================================

# Your Cloudflare Zone ID (find on your Cloudflare dashboard overview page)
CLOUDFLARE_ZONE_ID=CHANGE_ME
# The full DNS hostname ddclient should update (must match your DOMAIN)
DDCLIENT_HOSTNAME=vault.example.com

# ==========================================================
#                 RESOURCE LIMITS
# ==========================================================
# Optimized for OCI A1 Flex (1 OCPU, 6GB RAM) with ~10 users
VAULTWARDEN_MEMORY_LIMIT=1g
CADDY_MEMORY_LIMIT=128m
FAIL2BAN_MEMORY_LIMIT=64m
DDCLIENT_MEMORY_LIMIT=64m

# ==========================================================
#         SECRETS (Handled via secrets/secrets.yaml)
# ==========================================================
# These are referenced by docker-compose but populated securely at runtime.
# Do NOT set sensitive values directly in this file. Use ./edit-secrets.sh
# - ADMIN_BASIC_AUTH_HASH (Populated by startup.sh for Caddy)
# - CLOUDFLARE_API_TOKEN (Populated by startup.sh for Fail2ban, used via secrets file by Caddy/ddclient)
# - SMTP_PASSWORD (Used via secrets file by VaultWarden)
# - PUSH_INSTALLATION_KEY (Used via secrets file by VaultWarden)

# Optional: SMTP Configuration (configure credentials in secrets/secrets.yaml)
# If using SMTP, uncomment and set these. Password goes in secrets.
# SMTP_HOST=smtp.example.com
# SMTP_PORT=587
# SMTP_SECURITY=starttls
# SMTP_USERNAME=vaultwarden@example.com

# ==========================================================
#            DEVELOPMENT (Leave commented out)
# ==========================================================
# For local testing, you can override the compose file
# COMPOSE_FILE=docker-compose.yml:docker-compose.override.yml
