version: "3.9"

# VaultWarden-OCI-NG Docker Compose Configuration
# Corrected version addressing v4 review feedback

services:
  vaultwarden:
    image: vaultwarden/server:${VAULTWARDEN_VERSION:-1.30.5}
    container_name: vaultwarden_app
    restart: unless-stopped
    user: "1000:1000"

    environment:
      - DOMAIN=https://${DOMAIN}
      - DATABASE_URL=sqlite:///data/bwdata/db.sqlite3
      - ADMIN_TOKEN_FILE=/run/secrets/admin_token

      # WebSocket Configuration (Addresses v4 review)
      - WEBSOCKET_ENABLED=true
      - WEBSOCKET_ADDRESS=0.0.0.0
      - WEBSOCKET_PORT=3012

      # SMTP Configuration
      - SMTP_HOST=${SMTP_HOST:-}
      - SMTP_PORT=${SMTP_PORT:-587}
      - SMTP_SECURITY=${SMTP_SECURITY:-starttls}
      - SMTP_USERNAME=${SMTP_USERNAME:-}
      - SMTP_PASSWORD_FILE=/run/secrets/smtp_password
      - SMTP_FROM=${ADMIN_EMAIL}
      - SMTP_FROM_NAME=VaultWarden

      # Push Notifications
      - PUSH_INSTALLATION_KEY_FILE=/run/secrets/push_installation_key

      # Security Settings
      - SIGNUPS_ALLOWED=false
      - SIGNUPS_VERIFY=true
      - INVITATIONS_ALLOWED=true
      - EMERGENCY_ACCESS_ALLOWED=true
      - SENDS_ALLOWED=true
      - WEB_VAULT_ENABLED=true

      # Logging Configuration
      - LOG_LEVEL=${VAULTWARDEN_LOG_LEVEL:-info}
      - EXTENDED_LOGGING=true
      - LOG_FILE=/logs/vaultwarden.log
      - TZ=UTC

    volumes:
      - ${PROJECT_STATE_DIR:-/var/lib/vaultwarden}/data:/data:rw
      - ${PROJECT_STATE_DIR:-/var/lib/vaultwarden}/logs/vaultwarden:/logs:rw

    secrets:
      - admin_token
      - smtp_password
      - push_installation_key

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/alive"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

    deploy:
      resources:
        limits:
          memory: ${VAULTWARDEN_MEMORY_LIMIT:-512m}
          cpus: '0.5'
        reservations:
          memory: 256m
          cpus: '0.1'

    networks:
      - vaultwarden_network

  caddy:
    image: caddy:${CADDY_VERSION:-2.8.4}
    container_name: vaultwarden_caddy
    restart: unless-stopped
    user: "1000:1000"

    environment:
      - DOMAIN=${DOMAIN}
      - EMAIL=${ADMIN_EMAIL}
      - ADMIN_BASIC_AUTH_HASH=${ADMIN_BASIC_AUTH_HASH}
      - CLOUDFLARE_API_TOKEN_FILE=/run/secrets/cloudflare_api_token

    ports:
      - "80:80"
      - "443:443"

    volumes:
      - ./caddy/Caddyfile:/etc/caddy/Caddyfile:ro
      - ./caddy/cloudflare-ips.caddy:/etc/caddy/cloudflare-ips.caddy:ro
      - ${PROJECT_STATE_DIR:-/var/lib/vaultwarden}/caddy/data:/data:rw
      - ${PROJECT_STATE_DIR:-/var/lib/vaultwarden}/caddy/config:/config:rw
      - ${PROJECT_STATE_DIR:-/var/lib/vaultwarden}/logs/caddy:/logs:rw

    secrets:
      - cloudflare_api_token
      - admin_basic_auth_hash

    depends_on:
      vaultwarden:
        condition: service_healthy

    healthcheck:
      test: ["CMD", "caddy", "version"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

    deploy:
      resources:
        limits:
          memory: ${CADDY_MEMORY_LIMIT:-128m}
          cpus: '0.2'
        reservations:
          memory: 64m
          cpus: '0.05'

    networks:
      - vaultwarden_network

  fail2ban:
    image: crazymax/fail2ban:${FAIL2BAN_VERSION:-1.1.0}
    container_name: vaultwarden_fail2ban
    restart: unless-stopped

    environment:
      - TZ=UTC
      - F2B_LOG_LEVEL=${FAIL2BAN_LOG_LEVEL:-INFO}
      - F2B_LOG_TARGET=/var/log/fail2ban.log
      - F2B_DB_PURGE_AGE=1d
      - F2B_MAX_RETRY=3
      - F2B_DEST_EMAIL=${ADMIN_EMAIL}

    volumes:
      - ./fail2ban/jail.d:/config/jail.d:ro
      - ./fail2ban/filter.d:/config/filter.d:ro
      - ./fail2ban/action.d:/config/action.d:ro
      - ${PROJECT_STATE_DIR:-/var/lib/vaultwarden}/logs/caddy:/var/log/caddy:ro
      - ${PROJECT_STATE_DIR:-/var/lib/vaultwarden}/logs/vaultwarden:/var/log/vaultwarden:ro
      - ${PROJECT_STATE_DIR:-/var/lib/vaultwarden}/logs/fail2ban:/var/log:rw

    cap_add:
      - NET_ADMIN
      - NET_RAW

    healthcheck:
      test: ["CMD-SHELL", "fail2ban-client ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s

    deploy:
      resources:
        limits:
          memory: ${FAIL2BAN_MEMORY_LIMIT:-64m}
          cpus: '0.1'
        reservations:
          memory: 32m
          cpus: '0.02'

    network_mode: host

# Secrets managed externally by startup script
secrets:
  admin_token:
    file: ./secrets/.docker_secrets/admin_token
  admin_basic_auth_hash:
    file: ./secrets/.docker_secrets/admin_basic_auth_hash
  smtp_password:
    file: ./secrets/.docker_secrets/smtp_password
  push_installation_key:
    file: ./secrets/.docker_secrets/push_installation_key
  cloudflare_api_token:
    file: ./secrets/.docker_secrets/cloudflare_api_token

# Network configuration
networks:
  vaultwarden_network:
    name: ${DOCKER_NETWORK_NAME:-vaultwarden_network}
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
