# action.d/cloudflare.conf
# Blocks/unblocks IPs at Cloudflare using a scoped API token (Bearer token).
# Reads Zone ID and Token from environment variables passed by docker-compose.
# Ensure jq is installed in the fail2ban container (e.g., crazymax/fail2ban includes it).

[Definition]
actioncheck = test -n "<cfzone>" -a -n "<cftoken>" && command -v jq >/dev/null 2>&1

actionban = curl -sS -X POST "https://api.cloudflare.com/client/v4/zones/<cfzone>/firewall/access_rules/rules" \
    -H "Authorization: Bearer <cftoken>" \
    -H "Content-Type: application/json" \
    --data '{"mode":"block","configuration":{"target":"ip","value":"<ip>"},"notes":"Fail2Ban ban for <name> from <ip>"}'

# FIX: Added logging on unban API failure
actionunban = id=$(curl -sS -X GET "https://api.cloudflare.com/client/v4/zones/<cfzone>/firewall/access_rules/rules?mode=block&configuration.target=ip&configuration.value=<ip>&page=1&per_page=1" \
    -H "Authorization: Bearer <cftoken>" \
    -H "Content-Type: application/json" | jq -r '.result[0].id // empty')
    if [ -n "$id" ]; then
        curl -sS -X DELETE "https://api.cloudflare.com/client/v4/zones/<cfzone>/firewall/access_rules/rules/$id" \
            -H "Authorization: Bearer <cftoken>" \
            -H "Content-Type: application/json" \
        || echo "Fail2Ban: Cloudflare unban API call failed for <ip>" >> /var/log/fail2ban.log
    fi

[Init]
# These are passed via the [DEFAULT] action line in jail.conf
# and read directly from environment variables set in docker-compose.yml
cfzone = %(env_CLOUDFLARE_ZONE_ID)s
# P8 FIX: Update comment to reflect correct token name
cftoken = %(env_FAIL2BAN_API_TOKEN)s
