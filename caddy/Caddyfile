# Caddyfile for VaultWarden-OCI-NG
# Automatic HTTPS with security headers and rate limiting

{$DOMAIN} {
    # Global settings
    log {
        output file /logs/access.log {
            roll_size 10MB
            roll_keep 5
            roll_keep_for 24h
        }
        format json
    }

    # Security headers
    header {
        # Security headers
        Strict-Transport-Security "max-age=31536000; includeSubDomains; preload"
        X-Content-Type-Options "nosniff"
        X-Frame-Options "DENY"
        X-XSS-Protection "1; mode=block"
        Referrer-Policy "strict-origin-when-cross-origin"

        # Remove server info
        -Server
        -X-Powered-By

        # Content Security Policy (adjust as needed)
        Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self'; frame-src 'self'; object-src 'none'; base-uri 'self';"
    }

    # Rate limiting for admin endpoints
    @admin {
        path /admin*
    }

    rate_limit @admin {
        zone admin_zone {
            key {remote_host}
            events 10
            window 5m
        }
    }

    # Basic auth for admin (using secrets)  
    @admin_auth {
        path /admin*
        not {
            header Authorization "Basic*"
        }
    }

    # Block common attack paths
    @blocked {
        path /.env* /config* /.git* /.htaccess* /wp-admin* /wp-login* /phpMyAdmin* /admin.php*
    }

    respond @blocked 404

    # Main proxy to VaultWarden
    reverse_proxy vaultwarden:80 {
        # Preserve real IP from Cloudflare if configured
        header_up X-Real-IP {http.request.header.CF-Connecting-IP}
        header_up X-Forwarded-For {http.request.header.CF-Connecting-IP}
        header_up X-Forwarded-Proto {scheme}
        header_up Host {host}

        # Health check
        health_uri /alive
        health_interval 30s
        health_timeout 5s

        # Connection settings
        transport http {
            keepalive 30s
            keepalive_idle_conns 10
        }
    }

    # WebSocket support for notifications
    @websocket {
        header Connection *Upgrade*
        header Upgrade websocket
    }

    reverse_proxy @websocket vaultwarden:3012
}

# Redirect www to non-www
www.{$DOMAIN} {
    redir https://{$DOMAIN}{uri} permanent
}

# Health check endpoint for monitoring
:8080 {
    respond /health "OK" 200

    log {
        output discard
    }
}
